{"version":3,"sources":["webpack/bootstrap 10f035293970375c0dac","./js/main.js","./js/snake.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAC;;;;;;;ACVD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,iBAAgB,0BAA0B;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAG;AACH;;AAEA;AACA,IAAG;AACH;;AAEA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,qBAAqB;AACtC;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 10f035293970375c0dac\n **/","\nvar Board = require('./snake');\nvar View = require('./snake-view');\n\nwindow.$l(function() {\nvar $el = $l(\".snake\");\n\nvar board = new Board();\nvar view = new View($el);\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Snake = function() {\n  this.direction = \"N\";\n  this.segments = [new Coord([0,0]), new Coord([0,-1]), new Coord([0,-2])];\n};\n\nSnake.prototype.move = function () {\n  this.segments.pop();\n  var newSegment = this.segments[0].plus(this.direction);\n  this.segments.unshift(newSegment);\n\n\n  for(var i = 0; i < this.segments.length; i++) {\n\n    console.log(this.segments[i].coordPair);\n  }\n  console.log(\"*\");\n};\n\nSnake.prototype.turn = function (newDirection) {\n  if (newDirection !== this.oppositeDirection) {\n    this.direction = newDirection;\n  }\n};\n\nSnake.prototype.oppositeDirection = function () {\n  var _CARDINALS = {\"N\": \"S\",\n                    \"S\": \"N\",\n                    \"E\": \"W\",\n                    \"W\": \"E\" };\n  return _CARDINALS[this.direction];\n};\n\n\n\n\nvar Coord = function(coordPair) {\n  this.coordPair = coordPair;\n};\n\nCoord.prototype.plus = function (direction) {\n  var newArray;\n  if(direction === \"N\") {\n    newArray = [this.coordPair[0], this.coordPair[1]+1];\n\n  } else if(direction === \"S\") {\n    newArray = [this.coordPair[0], this.coordPair[1]-1];\n\n    // var newArray = [this.coordPair[0]+1, this.coordPair[1]];\n  } else if(direction === \"E\") {\n    newArray = [this.coordPair[0]+1, this.coordPair[1]];\n\n  } else {\n    newArray = [this.coordPair[0]-1, this.coordPair[1]];\n  }\n  return new Coord(newArray);\n};\n\nCoord.prototype.equals = function () {\n\n};\n\nCoord.prototype.isOpposite = function () {\n\n};\n\n\n\nvar Board = function () {\n  this.snake = new Snake();\n  this.size = 20;\n};\n\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 1\n ** module chunks = 0\n **/","/* globals $l */\n\nvar Board = require('./snake.js');\n\nvar View = function ($el) {\n  this.board = new Board();\n  this.$el = $el;\n\n  // this.attr(\"style\", \"height: 500px\")\n\n  this.bindEvents();\n  this.setupBoard();\n};\n\n\nView.prototype.bindEvents = function () {\n  $l('body').on(\"keydown\", this.handleKeyEvent);\n};\n\nView.prototype.handleKeyEvent = function (event) {\n  // debugger\n};\n\nView.prototype.setupBoard = function () {\n  for (var j = 0; j < this.board.size; j++) {\n    var $ul = $l(\"ul\");\n    for (var i = 0; i < this.board.size; i++) {\n      var $li = $l(\"li\");\n      $ul.append($li);\n    }\n    this.$el.append($ul);\n  }\n};\n\n// View.prototype.methodName = function () {\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}